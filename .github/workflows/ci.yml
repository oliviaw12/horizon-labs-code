name: CI

on:
  push:
    branches:
      - main
      - demo-2
      - feature/**
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  backend:
    name: Backend API
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: project_code/backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip downloads
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('project_code/backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest

      - name: Run backend tests
        run: |
          echo "Running pytest for backend"
          if [ -d "tests" ]; then
            echo "Found tests/ in working directory; running pytest tests"
            pytest tests -q
          elif [ -d "../tests" ]; then
            echo "Found ../tests/; running pytest ../tests"
            pytest ../tests -q
          else
            echo "No tests directory found at tests/ or ../tests/; running pytest -q (may error)"
            pytest -q
          fi

  frontend:
    name: Frontend App
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: project_code/frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          cache-dependency-path: project_code/frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Verify build
        run: npm run build
